<?php
 
use Phalcon\Mvc\Model\Criteria;
use Phalcon\Paginator\Adapter\Model as Paginator;


class DenpyouBangouMrsController extends ControllerBase
{
    /**
     * Index action
     */
    public function indexAction()
    {
        $numberPage = 1;
        $sort = "denpyou_mr_cd";
        $order = "ASC";
        $wherecd = "";
        if ($this->request->isPost()) {
            $query = Criteria::fromInput($this->di, 'DenpyouBangouMrs', $_POST);
            $this->persistent->parameters = $query->getParams();
        } else {
            $sort = $this->request->getQuery("sort") ?? $sort;
            $sort .= ' ' . $this->request->getQuery("order") ?? $order;
            $numberPage = $this->request->getQuery("page", "int");
            $wherecd = $this->request->getQuery("cd");
        }

        $parameters = $this->persistent->parameters;
        if (!is_array($parameters)) {
            $parameters = array();
        }
        $parameters["order"] = $sort;

        if ($wherecd) { /* 現在のコードのページを開く */
            $parameters1 = $parameters;
            $parameters1["conditions"] = "denpyou_mr_cd < '". $wherecd ."'";
            $numberPage = DenpyouBangouMrs::count($parameters1) / 10 + 1;
        }

        $denpyou_bangou_mrs = DenpyouBangouMrs::find($parameters);
        if (count($denpyou_bangou_mrs) == 0) {
            $this->flash->notice("検索の結果、伝票番号マスタは０件でした。");
        }

        $paginator = new Paginator(array(
            'data' => $denpyou_bangou_mrs,
            'limit'=> 10,
            'page' => $numberPage
        ));

        $this->view->page = $paginator->getPaginate();
    }

    /**
     * Searches for denpyou_bangou_mrs
     */
    public function searchAction()
    {
        $this->persistent->parameters = null;
    }

    /**
     * Displays the creation form
     */
    public function newAction()
    {

    }

    /**
     * Edits a denpyou_bangou_mr
     *
     * @param string $id
     */
    public function editAction($id)
    {
//        if (!$this->request->isPost()) {

            $denpyou_bangou_mr = DenpyouBangouMrs::findFirstByid($id);
            if (!$denpyou_bangou_mr) {
                $this->flash->error("伝票番号マスタが見つからなくなりました。");

                $this->dispatcher->forward(array(
                    'controller' => "denpyou_bangou_mrs",
                    'action' => 'index'
                ));

                return;
            }

            $this->view->id = $denpyou_bangou_mr->id;

            $this->tag->setDefault("id", $denpyou_bangou_mr->id);
            $this->tag->setDefault("denpyou_mr_cd", $denpyou_bangou_mr->denpyou_mr_cd);
            $this->tag->setDefault("nendo", $denpyou_bangou_mr->nendo);
            $this->tag->setDefault("saishuu_bangou", $denpyou_bangou_mr->saishuu_bangou);
            $this->tag->setDefault("id_moto", $denpyou_bangou_mr->id_moto);
            $this->tag->setDefault("hikae_dltflg", $denpyou_bangou_mr->hikae_dltflg);
            $this->tag->setDefault("hikae_user_id", $denpyou_bangou_mr->hikae_user_id);
            $this->tag->setDefault("hikae_nichiji", $denpyou_bangou_mr->hikae_nichiji);
            $this->tag->setDefault("sakusei_user_id", $denpyou_bangou_mr->sakusei_user_id);
            $this->tag->setDefault("created", $denpyou_bangou_mr->created);
            $this->tag->setDefault("kousin_user_id", $denpyou_bangou_mr->kousin_user_id);
            $this->tag->setDefault("updated", $denpyou_bangou_mr->updated);
            
//        }
    }
    /**
     * 修正画面から「次へ」ボタンを押したら次のコードの修正画面になる。
     */
    public function nextAction($id)
    {
        if (!$this->request->isPost()) {

            $denpyou_bangou_mr = DenpyouBangouMrs::findFirstByid($id);
            if (!$denpyou_bangou_mr) {
                $this->flash->error("伝票番号マスタが見つからなくなりました。");

                $this->dispatcher->forward(array(
                    'controller' => "denpyou_bangou_mrs",
                    'action' => 'index'
                ));

                return;
            }
            $denpyou_bangou_mr = DenpyouBangouMrs::findFirst(["(denpyou_mr_cd, nendo) > (:cd:, :nendo:)", "bind"=>["cd"=>$denpyou_bangou_mr->cd, "nendo"=>$denpyou_bangou_mr->nendo], "order"=>"denpyou_mr_cd, nendo"]);
            if (!$denpyou_bangou_mr) {
                $this->flash->warning("伝票番号マスタの最後です。");

                $this->dispatcher->forward(array(
                    'controller' => "denpyou_bangou_mrs",
                    'action' => 'edit',
                    'params' => array($id)
                ));

                return;
            }
            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'edit',
                'params' => array($denpyou_bangou_mr->id)
            ));
		}
    }

    /**
     * 修正画面から「前へ」ボタンを押したら前のコードの修正画面になる。
     */
    public function prevAction($id)
    {
        if (!$this->request->isPost()) {

            $denpyou_bangou_mr = DenpyouBangouMrs::findFirstByid($id);
            if (!$denpyou_bangou_mr) {
                $this->flash->error("伝票番号マスタが見つからなくなりました。");

                $this->dispatcher->forward(array(
                    'controller' => "denpyou_bangou_mrs",
                    'action' => 'index'
                ));

                return;
            }
            $denpyou_bangou_mr = DenpyouBangouMrs::findFirst(["(denpyou_mr_cd, nendo) < (:cd:, :nendo:)", "bind"=>["cd"=>$denpyou_bangou_mr->cd, "nendo"=>$denpyou_bangou_mr->nendo], "order"=>"denpyou_mr_cd DESC, nendo DESC"]);
            if (!$denpyou_bangou_mr) {
                $this->flash->warning("伝票番号マスタの最初です。");

                $this->dispatcher->forward(array(
                    'controller' => "denpyou_bangou_mrs",
                    'action' => 'edit',
                    'params' => array($id)
                ));

                return;
            }
            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'edit',
                'params' => array($denpyou_bangou_mr->id)
            ));
		}
    }

    /**
     * Creates a new denpyou_bangou_mr
     */
    public function createAction()
    {
        if (!$this->request->isPost()) {
            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'index'
            ));

            return;
        }

        $denpyou_bangou_mr = new DenpyouBangouMrs();
        $post_flds = ["denpyou_mr_cd","nendo","saishuu_bangou","updated",];
        foreach ($post_flds as $post_fld) {
            $denpyou_bangou_mr->$post_fld = $this->request->getPost($post_fld);
        }

        if (!$denpyou_bangou_mr->save()) {
            foreach ($denpyou_bangou_mr->getMessages() as $message) {
                $this->flash->error($message);
            }

            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'new'
            ));

            return;
        }

        $this->flash->success("伝票番号マスタの作成が完了しました。");

        $this->dispatcher->forward(array(
            'controller' => "denpyou_bangou_mrs",
            'action' => 'edit',
            'params' => array($denpyou_bangou_mr->id)
        ));
    }

    /**
     * Saves a denpyou_bangou_mr edited
     *
     */
    public function saveAction()
    {

        if (!$this->request->isPost()) {
            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'index'
            ));

            return;
        }

        $id = $this->request->getPost("id");
        $denpyou_bangou_mr = DenpyouBangouMrs::findFirstByid($id);

        if (!$denpyou_bangou_mr) {
            $this->flash->error("伝票番号マスタが見つからなくなりました。" . $id);

            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'index'
            ));

            return;
        }

        $post_flds = ["denpyou_mr_cd","nendo","saishuu_bangou","updated",];
        $chg_flg = 0;
        foreach ($post_flds as $post_fld) {
            if ($denpyou_bangou_mr->$post_fld != $this->request->getPost($post_fld)) {$chg_flg = 1; break;}
        }
        if ($chg_flg === 0) {
            $this->flash->error("変更がありません。" . $id);

            $this->dispatcher->forward(array(
                "controller" => "denpyou_bangou_mrs",
                "action" => "edit",
                "params" => array($denpyou_bangou_mr->id)
            ));

            return;
        }

        $this->_bakOut($denpyou_bangou_mr);

        foreach ($post_flds as $post_fld) {
            $denpyou_bangou_mr->$post_fld = $this->request->getPost($post_fld);
        }
        

        if (!$denpyou_bangou_mr->save()) {

            foreach ($denpyou_bangou_mr->getMessages() as $message) {
                $this->flash->error($message);
            }

            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'edit',
                'params' => array($id)
            ));

            return;
        }

        $this->flash->success("伝票番号マスタの情報を更新しました。");

        $this->dispatcher->forward(array(
            'controller' => "denpyou_bangou_mrs",
            'action' => 'edit',
            'params' => array($denpyou_bangou_mr->id)
        ));
    }

    /**
     * Deletes a denpyou_bangou_mr
     *
     * @param string $id
     */
    public function deleteAction($id)
    {
        $denpyou_bangou_mr = DenpyouBangouMrs::findFirstByid($id);
        if (!$denpyou_bangou_mr) {
            $this->flash->error("伝票番号マスタが見つからなくなりました。");

            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'index'
            ));

            return;
        }

        if (!$denpyou_bangou_mr->delete()) {

            foreach ($denpyou_bangou_mr->getMessages() as $message) {
                $this->flash->error($message);
            }

            $this->dispatcher->forward(array(
                'controller' => "denpyou_bangou_mrs",
                'action' => 'search'
            ));

            return;
        }

        $this->_bakOut($denpyou_bangou_mr, 1);

        $this->flash->success("伝票番号マスタの削除を完了しました。");

        $this->dispatcher->forward(array(
            'controller' => "denpyou_bangou_mrs",
            'action' => "index"
        ));
    }

    /**
     * カウントアップ  伝票番号
     *
     * @param string $denpyou_bangou_mr, $dlt_flg
     */

    public function _countup($denpyou_cd, $denpyou_no = 0, $nendo = 0)
    {
		if ($nendo == 0) {
			$konnnenndo = Konnnenndo::findFirstByid(1);
			$nendo = $konnnenndo->cd;
		}
		$conditions = "nendo = :nendo: AND denpyou_mr_cd = :denpyou_cd:"; // where条件
		$bind = array("nendo"=>$nendo, "denpyou_mr_cd"=>$denpyou_cd); // 条件の値
		$denpyou_bangou_mr = DenpyouBangouMrs::findFirst([$conditions, "bind" => $bind]);
		if ($denpyou_no == 0) { // 通常の付番
			$denpyou_no = $denpyou_bangou_mr->saishuu_bangou + 1;
		}
		$denpyou_bangou_mr->saishuu_bangou = $denpyou_no; // 通常付番も手入力付番も伝票番号マスタに更新する。
        if (!$denpyou_bangou_mr->save()) {
            foreach ($denpyou_bangou_mr->getMessages() as $message) {
                $this->flash->error($message);
            }
            $denpyou_no = 0; // 失敗の印として伝票番号=0を返す
		}
		return $denpyou_no; // 付けた伝票番号を返す。
    }

    /**
     * Back Out a denpyou_bangou_mr
     *
     * @param string $denpyou_bangou_mr, $dlt_flg
     */
    public function _bakOut($denpyou_bangou_mr, $dlt_flg = 0)
    {

        $bak_denpyou_bangou_mr = new BakDenpyouBangouMrs();
        foreach ($denpyou_bangou_mr as $fld => $value) {
            $bak_denpyou_bangou_mr->$fld = $denpyou_bangou_mr->$fld;
        }
        $bak_denpyou_bangou_mr->id = NULL;
        $bak_denpyou_bangou_mr->id_moto = $denpyou_bangou_mr->id;
        $bak_denpyou_bangou_mr->hikae_dltflg = $dlt_flg;
        $bak_denpyou_bangou_mr->hikae_user_id = (int)$this->getDI()->getSession()->get('auth')['id'];
        $bak_denpyou_bangou_mr->hikae_nichiji = date("Y-m-d H:i:s");
        if (!$bak_denpyou_bangou_mr->save()) {
            foreach ($bak_denpyou_bangou_mr->getMessages() as $message) {
                $this->flash->error($message);
            }
        }
    }

}
